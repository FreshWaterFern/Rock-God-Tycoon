<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize
menu_state = "Main Menu";
button_select = -2;
mouse_over = -1;
fxaa_set = obj_game.g_fxaa;
vsync_set = obj_game.g_vsync;
res_set = obj_game.g_res;
fs_set = obj_game.g_fs;
spr_internal[10] = 0;
music_slider = obj_game.g_music;
sound_slider = obj_game.g_sound;
key_state = 0;
track_volume = 0;
surface_main = surface_create(view_wview[0],view_hview[0]);
surface_update = true;

x_center = view_wview[0]/2;y_center = view_hview[0]/2;
y_point = 0;color = 0;gray = make_colour_rgb(200,200,200);

math_set_epsilon(0.0001);

// initialize array
for(var i=10;i&gt;=0;i--){spr[i]=global.sprite_map[?"Video Settings\Controller.png"];}
for(var i=5;i&gt;=0;i--){key_set[i]=obj_game.control_map[?"key"+string(i+1)];}

// Special Variables
light_rot1 = 2.5;light_rot_speed1 = 0.05;
light_rot2 = 1;light_rot_speed2 = 0.025;
light_rot3 = 42.5;light_rot_speed3 = 0.05;
mic_rot1 = 0;mic_rot_speed1 = 0.4;
speaker_move1 = 0;speaker_move_speed1 = 0.15;
tv_move1 = 0;tv_move_speed1 = 0.1;
remote_move1 = 0;remote_move_speed1 = 0.1;

// UI Variables
slider_lock[0] = 0;slider_lock[1] = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Button Logic
if ( obj_game.menu_set == "none" ){
mouse_over = -1;

switch(menu_state){
case "Main Menu":{

step_mainmenu_MainMenu();

break;}

case "Options":{

step_mainmenu_Options();

break;}

case "Video Settings":{ // Video Settings

step_mainmenu_VideoSettings();

break;}

case "Audio Settings":{ // Audio Settings

step_mainmenu_AudioSettings();

break;}

case "Control Settings":{ // Control Settings

step_mainmenu_ControlSettings();

break;}}}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Special Logic
if ( obj_game.menu_set == "start game" &amp;&amp; audio_exists(track) ){
if ( track_volume == 0 ){track_volume = 1;
audio_sound_gain(track,0,1200);}}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Unload Menu Data
spr=0;key_set=0;spr_internal=0;audio_stop_sound(track);
surface_free(surface_main);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Play Background Music
track = audio_play(1,1,1,2);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Render

if ( !surface_exists(surface_main) ){
surface_main = surface_create(view_wview[0],view_hview[0]);
surface_update = true;}

switch(menu_state){

case "Main Menu":{ // Main Menu

draw_mainmenu_MainMenu();

break;}

case "Options":{ // Options Menu

draw_mainmenu_Options();

break;}

case "Video Settings":{ // Video Settings

draw_mainmenu_VideoSettings();

break;}

case "Audio Settings":{ // Audio Settings

draw_mainmenu_AudioSettings();

break;}

case "Control Settings":{ // Audio Settings

draw_mainmenu_ControlSettings();

break;}

}

// Version Number
draw_set_font(font_grave_36);draw_set_halign(fa_left);draw_set_valign(fa_bottom);draw_set_color(c_white);
draw_text(view_xview[0],view_yview[0]+view_hview[0],build_version);

if ( surface_update ){surface_update=false;}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
