<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-999</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize
application_surface_draw_enable(0);
menu_set = "none";
message_str = "";
message_spr = 0;
message_pressed = 0;
message_over = 0;
message_id = 0;
draw_fade = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Game System Initialize

game_time_pause = false;
game_time_seconds = 0;
game_time_minutes = 0;
game_time_hours = 24;
game_time_day = 1;
game_time_month = 1;
game_time_year = 1;
game_time_speed = 0;
game_world_date = string(game_time_day)+"/"+string(game_time_month)+"/Year "+string(game_time_year);

// Write out month and day names
game_day_name = ds_list_create();
ds_list_add(game_day_name,"Monday");
ds_list_add(game_day_name,"Tuesday");
ds_list_add(game_day_name,"Wednesday");
ds_list_add(game_day_name,"Thursday");
ds_list_add(game_day_name,"Friday");
ds_list_add(game_day_name,"Saturday");
ds_list_add(game_day_name,"Sunday");

game_month_name = ds_list_create();
ds_list_add(game_month_name,"January");
ds_list_add(game_month_name,"February");
ds_list_add(game_month_name,"March");
ds_list_add(game_month_name,"April");
ds_list_add(game_month_name,"May");
ds_list_add(game_month_name,"June");
ds_list_add(game_month_name,"July");
ds_list_add(game_month_name,"August");
ds_list_add(game_month_name,"September");
ds_list_add(game_month_name,"October");
ds_list_add(game_month_name,"November");
ds_list_add(game_month_name,"December");

game_month_day_count = ds_list_create();
ds_list_add(game_month_day_count,31);
ds_list_add(game_month_day_count,28);
ds_list_add(game_month_day_count,31);
ds_list_add(game_month_day_count,30);
ds_list_add(game_month_day_count,31);
ds_list_add(game_month_day_count,30);
ds_list_add(game_month_day_count,31);
ds_list_add(game_month_day_count,31);
ds_list_add(game_month_day_count,30);
ds_list_add(game_month_day_count,31);
ds_list_add(game_month_day_count,30);
ds_list_add(game_month_day_count,31);

// game_world_date = string(game_time_day)+"/"+string(game_time_month)+" Year "+string(game_time_year);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// In-Game Variables

// -- Statistics -- \\
stat_songs_created = 0;
stat_songs_written = 0;
stat_songs_generated = 0;
stat_best_rated_song = "Bunny Blow Out";
stat_singles_released = 0;
stat_eps_released = 0;
stat_lps_released = 0;
stat_best_rated_single = "Clown Boner";
stat_best_rated_ep = "Clown Boner (Part II)";
stat_best_rated_lp = "I Forgot The Notes";
stat_record_deal_previous = "Ubisuck";
stat_record_deal_current = "Pipe Dream";
stat_label_name = "Dick Butt";
stat_labelband_relationship = "It's Complicated";
stat_label_status = "Ok";
stat_contract_type = "The Bad Kind";
stat_contract_duration = "6 Months";

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Center Window
window_center();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Only use at game start
instance_create(0,0,obj_ini_load);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Message_Show Handling
if ( menu_set == "popup" ){
if ( mouse_check_area((res_x/2)-100,(res_y/2)+115-40,(res_x/2)+100,(res_y/2)+115+40) ){
message_over = 1;
if ( mouse_check_button_pressed(mb_left) ){message_pressed=1;}
if ( mouse_check_button_released(mb_left) &amp;&amp; message_pressed == 1 ){menu_set = "none";message_handle();io_clear();}}else{
message_over = 0;
if ( mouse_check_button_released(mb_left) ){message_pressed = 0;}
message_spr=global.sprite_map[? "Apply button\Apply button.png"];}

if ( message_pressed == 1 ){message_over = 0;
message_spr=global.sprite_map[? "Apply button\Apply button effect.png"];}}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Special Scripts

// Fade Out On Main Menu
if ( menu_set == "start game" ){
if ( room != rm_intro ){
if ( draw_fade &lt; 1.25 ){draw_fade+=0.01;}if ( draw_fade &gt;= 1.25 ){room_goto(rm_garage);}}
if ( room == rm_garage ){
if ( draw_fade &gt; 0 ){draw_fade-=0.03;menu_set = "start game";}else{menu_set = "none";}}}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Game Logic Scripts

// In-Game Time
game_time_step();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Debug Controls
if ( keyboard_check(vk_escape) ){game_end();}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ( room == rm_main ){ // Main Menu
image_destroy(50);audio_destroy(50);
draw_set_blend_mode(bm_normal);draw_set_alpha(1);draw_set_color(c_white);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Pre-load Assets

volume_update();

if ( room == rm_main ){ // Main Menu
resolution_update();
if ( g_fs != window_get_fullscreen() ){window_set_fullscreen(g_fs)}
img_ext[0]=background_add("Main Menu\Background.png",0,0);
img_ext[1]=background_add("Main Menu\Background.png",0,0);
img_ext[2]=background_add("Audio_Controls_Video\Background.png",0,0);
img_ext[3]=background_add("Main Menu\Paper Piece.png",0,0);
img_ext[4]=background_add("Options\Paper Piece.png",0,0);
img_ext[5]=background_add("Video Settings\Paper Piece.png",0,0);
img_ext[6]=background_add("Audio\Paper Piece.png",0,0);
img_ext[7]=sprite_add("Audio\Microphone.png",0,0,0,10,2);
img_ext[8]=sprite_add("Audio\Amplifier.png",0,0,0,183,134);
img_ext[9]=sprite_add("Video Settings\Tv.png",0,0,0,154,189);
img_ext[10]=sprite_add("Main Menu\Light.png",0,0,0,70,9);
img_ext[11]=sprite_add("Options\Light.png",0,0,0,90,1060);
img_ext[12]=background_add("Controls Sub Menu\Paper Piece.png",0,0);
img_ext[13]=sprite_add("Controls Sub Menu\Buttons\Strumming Button.png",0,0,0,96,19);
img_ext[14]=sprite_add("Controls Sub Menu\Buttons\Strumming Button Effect.png",0,0,0,96,19);
img_ext[15]=sprite_add("Controls Sub Menu\Buttons\default button.png",0,0,0,83,22);
img_ext[16]=sprite_add("Controls Sub Menu\Buttons\default button effect.png",0,0,0,83,22);
img_ext[17]=sprite_add("Controls Sub Menu\Buttons\rock god button.png",0,0,0,92,20);
img_ext[18]=sprite_add("Controls Sub Menu\Buttons\rock god button effect.png",0,0,0,92,20);
img_ext[19]=sprite_add("Controls Sub Menu\Buttons\Custom button.png",0,0,0,87,27);
img_ext[20]=sprite_add("Controls Sub Menu\Buttons\Custom button effect.png",0,0,0,87,27);
img_ext[21]=sprite_add("Controls Sub Menu\Mouse.png",0,0,0,10,1);
img_ext[22]=sprite_add("Controls Sub Menu\Keyboard.png",0,0,0,162,171);
audio_ext[0]=audio_create_stream("sound_files\click01.ogg");
audio_ext[1]=audio_create_stream("sound_files\bg_music01.ogg");
}

if ( room == rm_intro ){ // Intro
img_ext[0]=background_add("Intro\Part I\Background.png",0,0);
img_ext[1]=sprite_add("Intro\Part I\Paper Piece.png",0,0,0,368,485);
img_ext[2]=sprite_add("Intro\Part I\Buttons\Guitarist Button.png",0,0,0,73,16);
img_ext[3]=sprite_add("Intro\Part I\Buttons\Guitarist Button Effect.png",0,0,0,73,16);
img_ext[4]=sprite_add("Intro\Part I\Buttons\Bassist Button.png",0,0,0,61,17);
img_ext[5]=sprite_add("Intro\Part I\Buttons\Bassist Button Effect.png",0,0,0,61,17);
img_ext[6]=sprite_add("Intro\Part I\Buttons\Vocalist Button.png",0,0,0,73,17);
img_ext[7]=sprite_add("Intro\Part I\Buttons\Vocalist Button Effect.png",0,0,0,73,17);
img_ext[8]=sprite_add("Intro\Part I\Buttons\Drummer Button.png",0,0,0,76,16);
img_ext[9]=sprite_add("Intro\Part I\Buttons\Drummer Button Effect.png",0,0,0,76,16);
img_ext[10]=sprite_add("Intro\Part I\Buttons\Hand.png",0,0,0,2,202);
img_ext[11]=sprite_add("Intro\Part I\Signature.png",39,false,false,76,38);
audio_ext[0]=audio_create_stream("sound_files\click01.ogg");
}

if ( room == rm_garage ){ // Garage
img_ext[10]=background_add("Main Game\GUI\Background.png",0,0);
img_ext[11]=background_add("Main Game\GUI\Evening_Background.png",0,0);
img_ext[12]=background_add("Main Game\GUI\Night_Background.png",0,0);
img_ext[13]=background_add("Band_Info\Background.png",0,0);
img_ext[14]=background_add("Band_Info\Rivalries Tab\Band_Info_Submenu.png",0,0);
img_ext[15]=background_add("Band_Info\Songs and Records Tab\Songs_and_Records_Paper_Piece.png",0,0);
img_ext[16]=background_add("Band_Info\Band Info Tab\Band_Info_Paper_Piece.png",0,0);
img_ext[17]=background_add("Band_Info\Member Tab\Member_Paper_Piece.png",0,0);
audio_ext[0]=audio_create_stream("sound_files\click01.ogg");
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Clear memory
image_destroy(50);audio_destroy(50);

for(i=0;i&lt;ds_list_size(global.texture_pages);i++){
background_delete(global.texture_pages[|i]);}

img_ext = -1;audio_ext = -1;

audio_emitter_free(emit_music);audio_emitter_free(emit_sound);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Game Initialize
control_map = ds_map_create();

if ( file_exists("settings.ini") ){
ini_open("settings.ini");
g_fxaa = ini_read_real("data","fxaa",0);
g_vsync = ini_read_real("data","vsync",0);
g_fs = ini_read_real("data","fullscreen",0);
g_res = ini_read_real("data","resolution",0);
g_sound = ini_read_real("data","sound",0.5);
g_music = ini_read_real("data","music",0.5);
ds_map_add(control_map,"key1",ini_read_real("controls","key1",ord("Z")));
ds_map_add(control_map,"key2",ini_read_real("controls","key2",ord("X")));
ds_map_add(control_map,"key3",ini_read_real("controls","key3",ord("C")));
ds_map_add(control_map,"key4",ini_read_real("controls","key4",ord("V")));
ds_map_add(control_map,"key5",ini_read_real("controls","key5",ord("B")));
ds_map_add(control_map,"key6",ini_read_real("controls","key6",vk_enter));
}else{
ini_open("settings.ini");
ini_write_real("data","fxaa",0);
ini_write_real("data","vsync",0);
ini_write_real("data","fullscreen",0);
ini_write_real("data","resolution",0);
ini_write_real("data","sound",0.5);
ini_write_real("data","music",0.5);
ini_write_real("controls","key1",ord("Z"));
ini_write_real("controls","key2",ord("X"));
ini_write_real("controls","key3",ord("C"));
ini_write_real("controls","key4",ord("V"));
ini_write_real("controls","key5",ord("B"));
ini_write_real("controls","key6",vk_enter);
ds_map_add(control_map,"key1",ord("Z"));ds_map_add(control_map,"key2",ord("X"));
ds_map_add(control_map,"key3",ord("C"));ds_map_add(control_map,"key4",ord("V"));
ds_map_add(control_map,"key5",ord("B"));ds_map_add(control_map,"key6",vk_enter);
g_fxaa = 0;g_vsync = 0;g_fs = 0;g_res = 0;g_sound = 0.5;g_music = 0.5;}
ini_close();

img_ext[50]=-99;
audio_ext[50]=-99;
for(var i=50;i&gt;-1;i--){img_ext[i]=-99;}
for(var i=50;i&gt;-1;i--){audio_ext[i]=-99;}

emit_sound = audio_emitter_create();
emit_music = audio_emitter_create();
res_count = 0;res_x=0;res_y=0;

display_reset(0,g_vsync);

volume_update();
resolution_update();

window_set_cursor(cr_none);
cursor_sprite = spr_ui_cursor;


alarm[0]=2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="77">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Render Application With FXAA

// DISABLE ALPHABLEND BECAUSE SURFACES //
draw_enable_alphablend(0);
// GET OFFSET OF THE APPLICATION SURFACE FOR MANUAL DRAWING //
var offset = application_get_position();
// SET THE SHADER //
if(g_fxaa&gt;0){
shader_set(sha_fxaa);
var tex = surface_get_texture(application_surface);
shader_set_uniform_f(shader_get_uniform(sha_fxaa, "u_texel"), texture_get_texel_width(tex), texture_get_texel_height(tex));
shader_set_uniform_f(shader_get_uniform(sha_fxaa, "u_strength"),g_fxaa);
}
// DRAW THE APPLICATION SURFACE //
if ( !g_fs ){
draw_surface_stretched(application_surface,offset[0],offset[1],res_x,res_y);}else{
draw_surface_stretched(application_surface,0,0,display_get_width(),display_get_height());}
// RESET ALPHABLEND //
draw_enable_alphablend(1);
// RESET THE SHADER //
if(g_fxaa&gt;0){shader_reset();}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Render Loading Screen
if ( room == rm_loading ){
draw_set_font(font_grave_36);draw_set_halign(fa_center);draw_set_valign(fa_middle);draw_set_color(c_white);
draw_text(960,540,"Loading...");}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Special Drawing
if ( menu_set == "start game" ){
draw_set_alpha(draw_fade);draw_set_color(c_black);
draw_rectangle(0,0,view_wview[0],view_hview[0],false);
draw_set_alpha(1);draw_set_color(c_white);}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw Pop Up Messages
if ( menu_set == "popup" ){
// Crash prevention
if ( message_spr == 0 ){message_spr = global.sprite_map[? "Apply button\Apply button.png"];}
var gray = make_colour_rgb(200,200,200);var color = c_white;
draw_set_font(font_peax_20);draw_set_halign(fa_left);draw_set_valign(fa_middle);draw_set_color(c_white);draw_set_alpha(1);
draw_external_sprite(global.sprite_map[? "General\message_show.png"],0,view_xview[0]+(view_wview[0]/2),view_yview[0]+(view_hview[0]/2));
if ( message_over != 1 ){color = c_white}else{color = gray}if ( message_pressed == 1 ){color = c_white}
draw_external_sprite_ext(message_spr,0,view_xview[0]+(view_wview[0]/2),view_yview[0]+(view_hview[0]/2)+115,1,1,0,color,1);
draw_set_color(c_black);
draw_text(view_xview[0]+(view_wview[0]/2)-225,view_yview[0]+(view_hview[0]/2)-105,message_str);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// GUI Scale Update
display_set_gui_size(view_wview[0],view_hview[0]);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
